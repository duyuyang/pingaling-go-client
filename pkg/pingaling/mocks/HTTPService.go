// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import bytes "bytes"
import io "io"
import mock "github.com/stretchr/testify/mock"

// HTTPService is an autogenerated mock type for the HTTPService type
type HTTPService struct {
	mock.Mock
}

// Delete provides a mock function with given fields: _a0
func (_m *HTTPService) Delete(_a0 string) (bytes.Buffer, error) {
	ret := _m.Called(_a0)

	var r0 bytes.Buffer
	if rf, ok := ret.Get(0).(func(string) bytes.Buffer); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bytes.Buffer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0
func (_m *HTTPService) Get(_a0 string) (bytes.Buffer, error) {
	ret := _m.Called(_a0)

	var r0 bytes.Buffer
	if rf, ok := ret.Get(0).(func(string) bytes.Buffer); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bytes.Buffer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Post provides a mock function with given fields: _a0, _a1
func (_m *HTTPService) Post(_a0 string, _a1 io.Reader) (bytes.Buffer, error) {
	ret := _m.Called(_a0, _a1)

	var r0 bytes.Buffer
	if rf, ok := ret.Get(0).(func(string, io.Reader) bytes.Buffer); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bytes.Buffer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, io.Reader) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
